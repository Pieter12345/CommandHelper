package com.laytonsmith.tools.docgen.localization;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.UUID;
import javax.swing.JScrollBar;

/**
 * Provides a UI for viewing log messages.
 */
class LogViewer extends javax.swing.JDialog {

	private String lastLog = UUID.randomUUID().toString();
	/**
	 * Creates new form LogViewer
	 */
	public LogViewer(java.awt.Frame parent) {
		super(parent, false);
		initComponents();
	}

	void pushLog(String status) {
		if(lastLog.equals(status)) {
			// Don't put duplicate logs on here.
			return;
		}
		textAreaLog.append("[" + new SimpleDateFormat("HH:mm:ss").format(new Date()) + "] " + status + "\n");
		lastLog = status;
		if(checkboxFollowTail.isSelected()) {
			JScrollBar vertical = scrollPaneLog.getVerticalScrollBar();
			vertical.setValue(vertical.getMaximum());
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
	 * content of this method is always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollPaneLog = new javax.swing.JScrollPane();
        textAreaLog = new javax.swing.JTextArea();
        buttonHide = new javax.swing.JButton();
        checkboxAlwaysOnTop = new javax.swing.JCheckBox();
        checkboxFollowTail = new javax.swing.JCheckBox();

        setTitle("Log Viewer");

        textAreaLog.setEditable(false);
        textAreaLog.setColumns(20);
        textAreaLog.setLineWrap(true);
        textAreaLog.setRows(5);
        textAreaLog.setText("---- Logs ----\n");
        textAreaLog.setWrapStyleWord(true);
        scrollPaneLog.setViewportView(textAreaLog);

        buttonHide.setText("Hide");
        buttonHide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonHideActionPerformed(evt);
            }
        });

        checkboxAlwaysOnTop.setText("Always on top");
        checkboxAlwaysOnTop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxAlwaysOnTopActionPerformed(evt);
            }
        });

        checkboxFollowTail.setText("Follow Tail");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 460, Short.MAX_VALUE)
                        .addComponent(checkboxFollowTail)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(checkboxAlwaysOnTop)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buttonHide))
                    .addComponent(scrollPaneLog))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrollPaneLog, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonHide)
                    .addComponent(checkboxAlwaysOnTop)
                    .addComponent(checkboxFollowTail))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void checkboxAlwaysOnTopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxAlwaysOnTopActionPerformed
        this.setAlwaysOnTop(checkboxAlwaysOnTop.isSelected());
    }//GEN-LAST:event_checkboxAlwaysOnTopActionPerformed

    private void buttonHideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonHideActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_buttonHideActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonHide;
    private javax.swing.JCheckBox checkboxAlwaysOnTop;
    private javax.swing.JCheckBox checkboxFollowTail;
    private javax.swing.JScrollPane scrollPaneLog;
    private javax.swing.JTextArea textAreaLog;
    // End of variables declaration//GEN-END:variables
}
